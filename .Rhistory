setwd("C:/Users/navee/Downloads/IST820_SP2023_demo-main")
getwd()
library(e1071)
library(caTools)
library(R.utils)
k=0
window_size=6
window_step=1
explain=c()
# load flattened data
X=read.csv("../Data/flattened-X.csv")
library(caTools)
library(caret)
library(randomForest)
library(R.utils)
prettySeq <- function(x) paste("Resample", gsub(" ", "0", format(seq(along = x))), sep = "")
createRandomDataPartition <- function(y, times, p) {
vec <- 1:length(y)
n_samples <- round(p * length(y))
result <- list()
for(t in 1:times){
indices <- sample(vec, n_samples, replace = FALSE)
result[[t]] <- indices
#names(result)[t] <- paste0("Resample", t)
}
names(result) <- prettySeq(result)
result
}
customSummary <- function (data,lev = NULL,model = NULL)
{
cm <- table(factor(data$obs,c(0,1)) , factor(data$pred,c(0,1)))
acc=(cm[1,1]+cm[2,2])/sum(cm)
f1=cm[2,2]/(cm[2,2]+0.5*(cm[1,2]+cm[2,1]))
dr=cm[2,2]/sum(cm[2,])
fpr=cm[1,2]/sum(cm[1,])
out=c(acc,f1,dr,fpr)
names(out) <- c("Acc","F1","DR","FPR")
out
}
set.seed(123)
seeds <- vector(mode = "list", length = 5)
for(i in 1:4) seeds[[i]] <- sample.int(1000, 36)
seeds[[5]] <- sample.int(1000, 1)
# open log file
k=0
sink(file = paste("log-",k,".txt",sep = ""),type = "output")
# load pca data
training_set=read.csv(paste("../Data/pca_training-set.csv",sep=""))
